{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lmm20\\\\sp25-cs411-team066\\\\BirdSpotter_Frontend\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport markerIcon from \"./MapIcons\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  events,\n  selectedEvent\n}) => {\n  _s();\n  const mapRef = useRef(null); // Reference to the map container\n  const mapInstanceRef = useRef(null); // Reference to the map instance\n  const markersRef = useRef({}); // Reference to the markers\n\n  const createPopupContent = event => {\n    const date = new Date(event.event_time).toLocaleString(\"en-US\");\n    return `\n\t\t\t<div>\n\t\t\t\t<h3>${event.bird_name}</h3>\n\t\t\t\t<p><em>${event.bird_scientific_name}</em></p>\n\t\t\t\t<p><strong>Date:</strong> ${date}</p>\n\t\t\t\t<p><strong>Location:</strong> ${event.State}, ${event.Country}</p>\n\t\t\t\t<p><strong>Coordinates:</strong> ${event.latitude.toFixed(4)}, ${event.longitude.toFixed(4)}</p>\n\t\t\t\t${event.image_url ? `<img src=\"${event.image_url}\" alt=\"${event.bird_scientific_name}\" style=\"width:100%;max-height:150px;object-fit:cover;margin-top:8px;\">` : \"\"}\n\t\t\t</div>\n\t\t`;\n  };\n  useEffect(() => {\n    // Initialize map (only once when component mounts)\n    if (!mapInstanceRef.current && mapRef.current) {\n      // TODO: Consider using a different map provider with API key for production\n      // Options include: Google Maps, Mapbox, or commercial OpenStreetMap solutions\n      const map = L.map(mapRef.current).setView([39.8283, -98.5795], 4); // USA center\n\n      // TODO: Replace with paid tier for production to avoid usage limits\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: \"© OpenStreetMap contributors\"\n      }).addTo(map);\n      mapInstanceRef.current = map;\n    }\n    if (!mapInstanceRef.current) return;\n\n    // Clean up existing markers\n    Object.values(markersRef.current).forEach(marker => marker.remove());\n    markersRef.current = {};\n\n    // Add new markers\n    events.forEach(event => {\n      if (!event.latitude || !event.longitude) return;\n      const marker = L.marker([event.latitude, event.longitude], {\n        icon: L.icon(markerIcon)\n      }).addTo(mapInstanceRef.current).bindPopup(createPopupContent(event), {\n        maxWidth: 300,\n        className: \"bird-popup\",\n        // Class name for styling the popup\n        autoPanPadding: [50, 50]\n      });\n      markersRef.current[event.event_id] = marker;\n    });\n\n    // Focus on selected event\n    const marker = selectedEvent && markersRef.current[selectedEvent.event_id];\n    if (marker) {\n      mapInstanceRef.current.setView([selectedEvent.latitude, selectedEvent.longitude], 13);\n      marker.openPopup();\n    }\n\n    // Cleanup function to remove map when component unmounts\n    return () => {\n      // This cleanup is crucial to prevent memory leaks\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [events, selectedEvent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n};\n_s(MapView, \"WFBshS63VcshgPzKbFUF9GsRSsQ=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","L","markerIcon","jsxDEV","_jsxDEV","MapView","events","selectedEvent","_s","mapRef","mapInstanceRef","markersRef","createPopupContent","event","date","Date","event_time","toLocaleString","bird_name","bird_scientific_name","State","Country","latitude","toFixed","longitude","image_url","current","map","setView","tileLayer","attribution","addTo","Object","values","forEach","marker","remove","icon","bindPopup","maxWidth","className","autoPanPadding","event_id","openPopup","children","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lmm20/sp25-cs411-team066/BirdSpotter_Frontend/src/components/MapView.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport L from \"leaflet\";\r\nimport markerIcon from \"./MapIcons\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst MapView = ({ events, selectedEvent }) => {\r\n\tconst mapRef = useRef(null); // Reference to the map container\r\n\tconst mapInstanceRef = useRef(null); // Reference to the map instance\r\n\tconst markersRef = useRef({}); // Reference to the markers\r\n\r\n\tconst createPopupContent = (event) => {\r\n\t\tconst date = new Date(event.event_time).toLocaleString(\"en-US\");\r\n\r\n\t\treturn `\r\n\t\t\t<div>\r\n\t\t\t\t<h3>${event.bird_name}</h3>\r\n\t\t\t\t<p><em>${event.bird_scientific_name}</em></p>\r\n\t\t\t\t<p><strong>Date:</strong> ${date}</p>\r\n\t\t\t\t<p><strong>Location:</strong> ${event.State}, ${event.Country}</p>\r\n\t\t\t\t<p><strong>Coordinates:</strong> ${event.latitude.toFixed(\r\n\t\t\t\t\t4\r\n\t\t\t\t)}, ${event.longitude.toFixed(4)}</p>\r\n\t\t\t\t${\r\n\t\t\t\t\tevent.image_url\r\n\t\t\t\t\t\t? `<img src=\"${event.image_url}\" alt=\"${event.bird_scientific_name}\" style=\"width:100%;max-height:150px;object-fit:cover;margin-top:8px;\">`\r\n\t\t\t\t\t\t: \"\"\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// Initialize map (only once when component mounts)\r\n\t\tif (!mapInstanceRef.current && mapRef.current) {\r\n\t\t\t// TODO: Consider using a different map provider with API key for production\r\n\t\t\t// Options include: Google Maps, Mapbox, or commercial OpenStreetMap solutions\r\n\t\t\tconst map = L.map(mapRef.current).setView([39.8283, -98.5795], 4); // USA center\r\n\r\n\t\t\t// TODO: Replace with paid tier for production to avoid usage limits\r\n\t\t\tL.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n\t\t\t\tattribution: \"© OpenStreetMap contributors\",\r\n\t\t\t}).addTo(map);\r\n\t\t\tmapInstanceRef.current = map;\r\n\t\t}\r\n\r\n\t\tif (!mapInstanceRef.current) return;\r\n\r\n\t\t// Clean up existing markers\r\n\t\tObject.values(markersRef.current).forEach((marker) => marker.remove());\r\n\t\tmarkersRef.current = {};\r\n\r\n\t\t// Add new markers\r\n\t\tevents.forEach((event) => {\r\n\t\t\tif (!event.latitude || !event.longitude) return;\r\n\r\n\t\t\tconst marker = L.marker([event.latitude, event.longitude], {\r\n\t\t\t\ticon: L.icon(markerIcon),\r\n\t\t\t})\r\n\t\t\t\t.addTo(mapInstanceRef.current)\r\n\t\t\t\t.bindPopup(createPopupContent(event), {\r\n\t\t\t\t\tmaxWidth: 300,\r\n\t\t\t\t\tclassName: \"bird-popup\", // Class name for styling the popup\r\n\t\t\t\t\tautoPanPadding: [50, 50],\r\n\t\t\t\t});\r\n\r\n\t\t\tmarkersRef.current[event.event_id] = marker;\r\n\t\t});\r\n\r\n\t\t// Focus on selected event\r\n\t\tconst marker = selectedEvent && markersRef.current[selectedEvent.event_id];\r\n\t\tif (marker) {\r\n\t\t\tmapInstanceRef.current.setView(\r\n\t\t\t\t[selectedEvent.latitude, selectedEvent.longitude],\r\n\t\t\t\t13\r\n\t\t\t);\r\n\t\t\tmarker.openPopup();\r\n\t\t}\r\n\r\n\t\t// Cleanup function to remove map when component unmounts\r\n\t\treturn () => {\r\n\t\t\t// This cleanup is crucial to prevent memory leaks\r\n\t\t\tif (mapInstanceRef.current) {\r\n\t\t\t\tmapInstanceRef.current.remove();\r\n\t\t\t\tmapInstanceRef.current = null;\r\n\t\t\t}\r\n\t\t};\r\n\t}, [events, selectedEvent]);\r\n\r\n\treturn (\r\n\t\t<div className=\"map-container\">\r\n\t\t\t<div ref={mapRef} style={{ height: \"100%\", width: \"100%\" }} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}