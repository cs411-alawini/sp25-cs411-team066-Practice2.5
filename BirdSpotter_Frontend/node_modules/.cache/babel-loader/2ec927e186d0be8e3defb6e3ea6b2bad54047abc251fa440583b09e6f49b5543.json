{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lmm20\\\\sp25-cs411-team066\\\\BirdSpotter_Frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport EventsPanel from \"../components/EventsPanel\";\nimport MapView from \"../components/MapView\";\nimport \"../styles/pages/Home.css\";\n\n// 添加环境变量\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"/api\";\nfunction Home() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isSearching, setIsSearching] = useState(false);\n\n  // 分页状态\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0,\n    hasNext: false\n  });\n  const itemsPerPage = 10;\n\n  // 获取分页数据\n  const fetchPagedEvents = useCallback(async (page = 1) => {\n    console.log(\"Fetching page:\", page);\n    try {\n      setLoading(true);\n      // 确保 page 是数字类型\n      const pageNum = parseInt(page, 10);\n      const response = await fetch(`${API_URL}/events/page?page=${pageNum}&limit=${itemsPerPage}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch events: ${response.status}`);\n      }\n      const result = await response.json();\n      if (result.status !== \"success\") {\n        throw new Error(\"API returned unsuccessful status\");\n      }\n      const {\n        data\n      } = result;\n      console.log(\"Page data:\", {\n        events: data.events.length,\n        currentPage: data.pagination.current_page,\n        totalPages: data.pagination.total_pages,\n        totalItems: data.pagination.total_items,\n        hasNext: data.pagination.has_next,\n        requestPage: pageNum\n      });\n\n      // 更新分页信息\n      setPagination({\n        currentPage: data.pagination.current_page,\n        totalPages: data.pagination.total_pages,\n        totalItems: data.pagination.total_items,\n        hasNext: data.pagination.has_next\n      });\n\n      // 直接设置新数据\n      setEvents(data.events);\n      setFilteredEvents(data.events);\n      setError(null);\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [itemsPerPage]);\n\n  // 搜索特定鸟类的事件\n  const handleSearch = useCallback(async term => {\n    console.log(\"Searching:\", term);\n    if (!term.trim()) {\n      console.log(\"Empty search, resetting to page 1\");\n      fetchPagedEvents(1);\n      return;\n    }\n    setIsSearching(true);\n    try {\n      const response = await fetch(`${API_URL}/events?search=${encodeURIComponent(term)}`);\n      if (!response.ok) {\n        throw new Error(`Search failed with status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(\"Search response:\", result);\n      if (!result || result.status !== \"success\") {\n        throw new Error(\"API returned unsuccessful status or invalid response\");\n      }\n      if (!result.data || !Array.isArray(result.data)) {\n        throw new Error(\"Invalid data format in response\");\n      }\n      console.log(\"Search results:\", {\n        events: result.data.length,\n        currentPage: 1,\n        totalItems: result.data.length\n      });\n\n      // 更新事件数据\n      setEvents(result.data);\n      setFilteredEvents(result.data);\n\n      // 重置分页信息\n      setPagination({\n        currentPage: 1,\n        totalPages: 1,\n        totalItems: result.data.length,\n        hasNext: false\n      });\n\n      // 重置选中的事件\n      setSelectedEvent(null);\n      setError(null);\n    } catch (err) {\n      console.error(\"Search error:\", err);\n      setError(\"Search failed: \" + err.message);\n      // 清空搜索结果\n      setEvents([]);\n      setFilteredEvents([]);\n      setPagination({\n        currentPage: 1,\n        totalPages: 1,\n        totalItems: 0,\n        hasNext: false\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  }, [fetchPagedEvents]);\n\n  // 处理搜索输入变化\n  const handleSearchChange = useCallback(term => {\n    setSearchTerm(term);\n  }, []);\n\n  // 处理页码变化\n  const handlePageChange = useCallback(newPage => {\n    console.log(\"Page change:\", newPage);\n    // 确保新页码在有效范围内\n    if (newPage >= 1 && newPage <= pagination.totalPages) {\n      fetchPagedEvents(newPage);\n    }\n  }, [fetchPagedEvents, pagination.totalPages]);\n\n  // 初始加载第一页数据\n  useEffect(() => {\n    fetchPagedEvents(1);\n  }, [fetchPagedEvents]);\n  if (loading && !events.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state\",\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 10\n    }, this);\n  }\n  if (error && !events.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-state\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(EventsPanel, {\n      events: filteredEvents,\n      selectedEvent: selectedEvent,\n      onEventSelect: setSelectedEvent,\n      searchTerm: searchTerm,\n      onSearchChange: handleSearchChange,\n      onSearchSubmit: handleSearch,\n      isSearching: isSearching,\n      currentPage: pagination.currentPage,\n      totalItems: pagination.totalItems,\n      itemsPerPage: itemsPerPage,\n      onPageChange: handlePageChange,\n      totalPages: pagination.totalPages,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      events: filteredEvents,\n      selectedEvent: selectedEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 3\n  }, this);\n}\n_s(Home, \"PIzNcnuJC1ueymhcC4hji+hb8Ow=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","EventsPanel","MapView","jsxDEV","_jsxDEV","API_URL","Home","_s","events","setEvents","filteredEvents","setFilteredEvents","selectedEvent","setSelectedEvent","loading","setLoading","error","setError","searchTerm","setSearchTerm","isSearching","setIsSearching","pagination","setPagination","currentPage","totalPages","totalItems","hasNext","itemsPerPage","fetchPagedEvents","page","console","log","pageNum","parseInt","response","fetch","ok","Error","status","result","json","data","length","current_page","total_pages","total_items","has_next","requestPage","err","message","handleSearch","term","trim","encodeURIComponent","Array","isArray","handleSearchChange","handlePageChange","newPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEventSelect","onSearchChange","onSearchSubmit","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/lmm20/sp25-cs411-team066/BirdSpotter_Frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport EventsPanel from \"../components/EventsPanel\";\r\nimport MapView from \"../components/MapView\";\r\nimport \"../styles/pages/Home.css\";\r\n\r\n// 添加环境变量\r\nconst API_URL = \"/api\";\r\n\r\nfunction Home() {\r\n\tconst [events, setEvents] = useState([]);\r\n\tconst [filteredEvents, setFilteredEvents] = useState([]);\r\n\tconst [selectedEvent, setSelectedEvent] = useState(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\r\n\tconst [isSearching, setIsSearching] = useState(false);\r\n\r\n\t// 分页状态\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tcurrentPage: 1,\r\n\t\ttotalPages: 1,\r\n\t\ttotalItems: 0,\r\n\t\thasNext: false,\r\n\t});\r\n\r\n\tconst itemsPerPage = 10;\r\n\r\n\t// 获取分页数据\r\n\tconst fetchPagedEvents = useCallback(\r\n\t\tasync (page = 1) => {\r\n\t\t\tconsole.log(\"Fetching page:\", page);\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\t// 确保 page 是数字类型\r\n\t\t\t\tconst pageNum = parseInt(page, 10);\r\n\t\t\t\tconst response = await fetch(\r\n\t\t\t\t\t`${API_URL}/events/page?page=${pageNum}&limit=${itemsPerPage}`\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Failed to fetch events: ${response.status}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst result = await response.json();\r\n\t\t\t\tif (result.status !== \"success\") {\r\n\t\t\t\t\tthrow new Error(\"API returned unsuccessful status\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst { data } = result;\r\n\t\t\t\tconsole.log(\"Page data:\", {\r\n\t\t\t\t\tevents: data.events.length,\r\n\t\t\t\t\tcurrentPage: data.pagination.current_page,\r\n\t\t\t\t\ttotalPages: data.pagination.total_pages,\r\n\t\t\t\t\ttotalItems: data.pagination.total_items,\r\n\t\t\t\t\thasNext: data.pagination.has_next,\r\n\t\t\t\t\trequestPage: pageNum,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 更新分页信息\r\n\t\t\t\tsetPagination({\r\n\t\t\t\t\tcurrentPage: data.pagination.current_page,\r\n\t\t\t\t\ttotalPages: data.pagination.total_pages,\r\n\t\t\t\t\ttotalItems: data.pagination.total_items,\r\n\t\t\t\t\thasNext: data.pagination.has_next,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 直接设置新数据\r\n\t\t\t\tsetEvents(data.events);\r\n\t\t\t\tsetFilteredEvents(data.events);\r\n\r\n\t\t\t\tsetError(null);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Fetch error:\", err);\r\n\t\t\t\tsetError(err.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[itemsPerPage]\r\n\t);\r\n\r\n\t// 搜索特定鸟类的事件\r\n\tconst handleSearch = useCallback(\r\n\t\tasync (term) => {\r\n\t\t\tconsole.log(\"Searching:\", term);\r\n\r\n\t\t\tif (!term.trim()) {\r\n\t\t\t\tconsole.log(\"Empty search, resetting to page 1\");\r\n\t\t\t\tfetchPagedEvents(1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsetIsSearching(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(\r\n\t\t\t\t\t`${API_URL}/events?search=${encodeURIComponent(term)}`\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Search failed with status: ${response.status}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst result = await response.json();\r\n\t\t\t\tconsole.log(\"Search response:\", result);\r\n\r\n\t\t\t\tif (!result || result.status !== \"success\") {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\"API returned unsuccessful status or invalid response\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!result.data || !Array.isArray(result.data)) {\r\n\t\t\t\t\tthrow new Error(\"Invalid data format in response\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"Search results:\", {\r\n\t\t\t\t\tevents: result.data.length,\r\n\t\t\t\t\tcurrentPage: 1,\r\n\t\t\t\t\ttotalItems: result.data.length,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 更新事件数据\r\n\t\t\t\tsetEvents(result.data);\r\n\t\t\t\tsetFilteredEvents(result.data);\r\n\r\n\t\t\t\t// 重置分页信息\r\n\t\t\t\tsetPagination({\r\n\t\t\t\t\tcurrentPage: 1,\r\n\t\t\t\t\ttotalPages: 1,\r\n\t\t\t\t\ttotalItems: result.data.length,\r\n\t\t\t\t\thasNext: false,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// 重置选中的事件\r\n\t\t\t\tsetSelectedEvent(null);\r\n\r\n\t\t\t\tsetError(null);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(\"Search error:\", err);\r\n\t\t\t\tsetError(\"Search failed: \" + err.message);\r\n\t\t\t\t// 清空搜索结果\r\n\t\t\t\tsetEvents([]);\r\n\t\t\t\tsetFilteredEvents([]);\r\n\t\t\t\tsetPagination({\r\n\t\t\t\t\tcurrentPage: 1,\r\n\t\t\t\t\ttotalPages: 1,\r\n\t\t\t\t\ttotalItems: 0,\r\n\t\t\t\t\thasNext: false,\r\n\t\t\t\t});\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsSearching(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchPagedEvents]\r\n\t);\r\n\r\n\t// 处理搜索输入变化\r\n\tconst handleSearchChange = useCallback((term) => {\r\n\t\tsetSearchTerm(term);\r\n\t}, []);\r\n\r\n\t// 处理页码变化\r\n\tconst handlePageChange = useCallback(\r\n\t\t(newPage) => {\r\n\t\t\tconsole.log(\"Page change:\", newPage);\r\n\t\t\t// 确保新页码在有效范围内\r\n\t\t\tif (newPage >= 1 && newPage <= pagination.totalPages) {\r\n\t\t\t\tfetchPagedEvents(newPage);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[fetchPagedEvents, pagination.totalPages]\r\n\t);\r\n\r\n\t// 初始加载第一页数据\r\n\tuseEffect(() => {\r\n\t\tfetchPagedEvents(1);\r\n\t}, [fetchPagedEvents]);\r\n\r\n\tif (loading && !events.length) {\r\n\t\treturn <div className=\"loading-state\">Loading events...</div>;\r\n\t}\r\n\r\n\tif (error && !events.length) {\r\n\t\treturn <div className=\"error-state\">{error}</div>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"home-container\">\r\n\t\t\t<EventsPanel\r\n\t\t\t\tevents={filteredEvents}\r\n\t\t\t\tselectedEvent={selectedEvent}\r\n\t\t\t\tonEventSelect={setSelectedEvent}\r\n\t\t\t\tsearchTerm={searchTerm}\r\n\t\t\t\tonSearchChange={handleSearchChange}\r\n\t\t\t\tonSearchSubmit={handleSearch}\r\n\t\t\t\tisSearching={isSearching}\r\n\t\t\t\tcurrentPage={pagination.currentPage}\r\n\t\t\t\ttotalItems={pagination.totalItems}\r\n\t\t\t\titemsPerPage={itemsPerPage}\r\n\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\ttotalPages={pagination.totalPages}\r\n\t\t\t\tloading={loading}\r\n\t\t\t/>\r\n\t\t\t<MapView events={filteredEvents} selectedEvent={selectedEvent} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}